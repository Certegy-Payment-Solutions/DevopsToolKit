version: '2'
services:
    # Web Container (talks to nginx-proxy)
    # The virtual host environment line allows nginx-proxy to know which domain
    # to proxy to which container.
    # Additionally, other networks can be registered (databases needed)
    [PROJECT_NAME]-web:
        image: nginx:latest
        container_name: sourcetoad_[PROJECT_NAME]_web
        environment:
            - VIRTUAL_HOST=[WEBSITE.DOCKER]
        volumes:
            - ../:/code
            - ./config/vhost.conf:/etc/nginx/conf.d/vhost.conf
        networks:
            - st-internal
            - nginx-proxy
    # PHP Container
    # The environment variables allow Xdebug to work properly.
    # Networks much like above can be registered depending on what the application
    # requires. In this case, redis and MariaDB.
    [PROJECT_NAME]-php:
        container_name: sourcetoad_[PROJECT_NAME]_php
        build: .
        environment:
          XDEBUG_CONFIG: "remote_host=host.docker.internal"
          PHP_IDE_CONFIG: "serverName=docker"
        volumes:
            - ../:/code
        networks:
            - st-internal
            - st-mariadb-102
            - st-redis-32
# These are networks that you are leveraging from outside (external) locations.
# The dev-ops repo is already running, so these networks already exist. We tell
# docker which networks of the dev-ops repo we need.
networks:
    st-internal:
        external:
            name: st-internal
    nginx-proxy:
        external:
            name: nginx-proxy
    st-redis-32:
        external:
            name: st-redis-32
    st-mariadb-102:
        external:
            name: st-mariadb-102